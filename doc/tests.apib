<!-- -*- mode: markdown -*- -->
# Data Structures

## TestData
+ type: crash (required)

    Type of test. Can be `unkwown`, `test`, `crash`, `exploit1` or `exploit2`.

+ cbn_id: 1 (required, number) - Id of associated Challenge Binary Node
+ job_id: 1 (required, number) - Id of generating Job
+ blob: `Q2lhbyBzb25vIHVuIGJpbmFyaW8hCg==` - Binary data base64 encoded

## TestDataComplete (TestData)
+ id: 1 (required, number) - Id of the Test
+ created_at: `2015-08-05T08:40:51.620Z`
+ updated_at: `2015-08-05T08:40:51.620Z`

## TestList (array)
+ (TestDataComplete)


# Group Tests

Tests contains test cases, crashes and exploits.

## Test [/tests/{test_id}]

+ Parameters

    + test_id: `1` (number) - The id of the Test.

### Get Test [GET]

Retrieve a single Test.

+ Response 200 (application/json)

    + Headers

            Location: /tests/2

    + Attributes (TestDataComplete)

+ Response 404 (application/json)

    + Body

            {
                "errors": ["Test not found"]
            }

### Update Test [PUT]

Update a single Test by setting attributes.

+ Request (application/json)

    + Attributes (TestData)

+ Response 200

    + Attributes (TestDataComplete)

+ Response 404 (application/json)

    + Body

            {
                "errors": ["Test not found"]
            }

+ Response 422

    There were errors updating the resource.

    + Body

            {
                "errors": [...]
            }


## Tests Collection [/tests{?with_descendants,cbn_id}]

### List Tests [GET]

List all tests, optionally filtered by parameters.

+ Parameters

    + with_descendants: `True` (boolean) - If specificied, include also tests from CBN descending the specified CBN.
    + cbn_id: `1` (number) - Id of CBN.

+ Response 200 (application/json)

    + Attributes (TestList)

### Create Test [POST]

Create a new test.

+ Request (application/json)

    + Attributes (TestData)

+ Response 201 (application/json)

    + Attributes (TestDataComplete)

+ Response 422

    There were errors creating the resource.

    + Body

            {
                "errors": [...]
            }
