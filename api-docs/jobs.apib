<!-- -*- mode: markdown -*- -->
# Data Structures

## JobData
+ priority: 0 (number) - Priority of the job. Higher value = higher priority
+ worker: afl (required, string) - Type of worker
+ limit_cpu: 4 (required, number) - Maximum number of # of CPU cores to use
+ limit_memory: 1 (required, number) - Maximum amount of memory (in GB) to use
+ started_at: `2015-08-05T08:40:51.620Z` - Worker run start
+ completed_at: `2015-08-05T08:40:51.620Z` - Worker run end
+ cbn_id: 2 (required, number) - Id of CBN used by job
+ produced_output: true (boolean)

    `true` if job successfully produced output,
    `false` did not produce any output, `undefined` if job has not completed yet

+ payload: `Q2lhbyBzb25vIHVuIGJpbmFyaW8hCg==` (string)

    Serialized job arguments base64 encoded

## JobDataComplete (JobData)
+ id: 1 (required, number) - Id of the Job
+ created_at: `2015-08-05T08:40:51.620Z`
+ updated_at: `2015-08-05T08:40:51.620Z`

## JobList (array)
+ (JobDataComplete)


# Group Jobs

A Job contains the specifics for a worker execution and its status.

## Job [/jobs/{job_id}]

+ Parameters

    + job_id: `1` (number) - The id of the job.

### Get Job [GET]

Retrieve a single Job.

+ Response 200

    + Headers

            Location: /jobs/1

    + Attributes (JobDataComplete)

+ Response 404 (application/json)

    + Body

            {
                "errors": ["Test not found"]
            }

### Update Job [PUT]

Update a single job by setting status.

+ Request (application/json)

    + Attributes (JobData)

+ Response 200

    + Attributes (JobDataComplete)

+ Response 404 (application/json)

    + Body

            {
                "errors": ["Job not found"]
            }

+ Response 422

    There were errors updating the resource.

    + Body

            {
                "errors": [...]
            }

## Jobs Collection [/jobs{?started,worker}]

### List Jobs [GET]

Retrieve all jobs, optionally filtered by parameters.

+ Parameters

    + started: `true` (boolean) - Started or not started jobs.
    + worker: `afl` (string) - Type of worker.

+ Response 200 (application/json)

    + Attributes (JobList)

### Create Job [POST]

Create a new job.

+ Request (application/json)

    + Attributes (JobData)

+ Response 201 (application/json)

    + Attributes (JobDataComplete)

+ Response 422

    There were errors creating the resource.

    + Body

            {
                "errors": [...]
            }
