#!/usr/bin/env python2
# -*- coding: utf-8 -*-

from __future__ import absolute_import, unicode_literals

from datetime import datetime
import hashlib
import os

from peewee import DateTimeField, ForeignKeyField, IntegerField
from playhouse.fields import ManyToManyField

from .base import BaseModel
from .exploit import Exploit
from .team import Team

"""ExploitSubmissionCable model"""


class ExploitSubmissionCable(BaseModel):
    """ExploitSubmissionCable model. Communicate what POV submit to ambassador"""

    team = ForeignKeyField(Team, related_name='exploit_submission_cables')
    throws = IntegerField()
    exploit = ForeignKeyField(Exploit, related_name='submission_cables')
    processed_at = DateTimeField(null=True)

    @classmethod
    def unprocessed(cls):
        """Return all unprocessed cables order by creation date descending."""
        return cls.select()\
                  .where(cls.processed_at.is_null(True))\
                  .order_by(cls.created_at.desc())

    @classmethod
    def most_recent_for_team(cls, team):
        """Return most recent exploit submitted to team `team`"""
        first_s = cls.select()\
                .where(cls.team == team)\
                .order_by(cls.created_at.desc()).first()

        return None if first_s is None else first_s.exploit

    def process(self):
        self.processed_at = datetime.now()
        self.save()
