#!/usr/bin/env python2
# -*- coding: utf-8 -*-

from __future__ import absolute_import, unicode_literals

import os
from datetime import datetime

from peewee import ForeignKeyField, IntegerField
from playhouse.fields import ManyToManyField

from .base import BaseModel
from .exploit import Exploit
from .round import Round
from .team import Team

"""ExploitFielding model"""


class ExploitFielding(BaseModel):
    """ExploitFielding model"""
    exploit = ForeignKeyField(Exploit, related_name='fieldings')
    team = ManyToManyField(Team, related_name='exploit_fieldings')
    submission_round = ForeignKeyField(Round, related_name='exploit_fieldings')
    throws = IntegerField(null=False)

    @classmethod
    def create(cls, *args, **kwargs):
        # Converting team to a list because its is a ManyToManyField
        if 'team' in kwargs:
            if isinstance(kwargs['team'], Team):
                kwargs['team'] = [kwargs['team']]
            team = kwargs.pop('team')

        obj = super(cls, cls).create(*args, **kwargs)
        obj.team = team
        return obj
