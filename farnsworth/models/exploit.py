#!/usr/bin/env python2
# -*- coding: utf-8 -*-

from __future__ import absolute_import, unicode_literals

from datetime import datetime

from peewee import FloatField, BlobField, CharField, DateTimeField, ForeignKeyField

from .base import BaseModel
from .challenge_binary_node import ChallengeBinaryNode
from .job import Job
from ..peewee_extensions import EnumField

"""Exploit model"""


class Exploit(BaseModel):
    """Exploit model"""
    cbn = ForeignKeyField(ChallengeBinaryNode, db_column='cbn_id', related_name='exploits')
    job = ForeignKeyField(Job, related_name='exploits')
    blob = BlobField()
    pov_type = EnumField(choices=['type1', 'type2'], enum_name='enum_pov_type')
    method = EnumField(choices=['unclassified', 'circumstantial', 'shellcode', 'rop'],
                       default='unclassified', enum_name='enum_exploitation_method', null=False)
    reliability = FloatField(default=0.0)
    c_code = BlobField()

    def submit_to(self, team, throws):
        """Save submission at current round"""
        from .exploit_fielding import ExploitFielding
        from .round import Round
        ExploitFielding.create(exploit=self, team=team,
                               submission_round=Round.get_current(),
                               throws=throws)
