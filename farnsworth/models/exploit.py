"""Exploit model"""

from datetime import datetime
from peewee import * #pylint:disable=wildcard-import,unused-wildcard-import

from ..peewee_extensions import EnumField
from .base import BaseModel
from .challenge_binary_node import ChallengeBinaryNode
from .job import Job
from .round import Round

class Exploit(BaseModel):
    """Exploit model"""
    cbn = ForeignKeyField(ChallengeBinaryNode, db_column='cbn_id', related_name='exploits')
    job = ForeignKeyField(Job, related_name='exploits')
    blob = BlobField()
    pov_type = EnumField(choices=['type1', 'type2'])
    submitted_at = DateTimeField(null=True)
    submitted_teams = CharField()

    def submitted_to(self, teams):
        """Update submission timestamp and team"""
        self.submitted_at = datetime.now()
        self.submitted_teams = teams
        self.save()

    @property
    def submissions(self):
        """Return list of submissions"""
        if self.submitted_at is not None:
            round_ = Round.at_timestamp(self.submitted_at)
            return [{
                'id': self.id,
                'round': round_.num,
                'team': self.submitted_teams,
                'type': self.pov_type,
                'submitted_at': str(self.submitted_at),
            }]
        else:
            return []
